DJANGO_SECRET_KEY=replace-with-strong-secret
DJANGO_DEBUG=1
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
CORS_ALLOWED_ORIGINS=http://localhost:3000

# Device defaults (used when alias not resolved)
DEVICE_USERNAME=admin
DEVICE_PASSWORD=admin
DEVICE_SECRET=
DEVICE_TYPE=cisco_ios
DEVICE_PORT=22
DEVICE_CONN_TIMEOUT=8
DEVICE_AUTH_TIMEOUT=10
DEVICE_BANNER_TIMEOUT=15

# Optional: default device selection
# If no device is mentioned or resolved, the API will try this alias or IP.
# DEFAULT_DEVICE_ALIAS takes precedence over DEFAULT_DEVICE_IP when both are set.
# Recommended default (current UK switch):
DEFAULT_DEVICE_ALIAS=UKLONB1SW2
DEFAULT_DEVICE_IP=

# Force/Block targeting controls
# FORCE_DEVICE_ALIAS/ FORCE_DEVICE_IP override any request or inference.
# BLOCKED_DEVICE_IPS/ALIASES will be avoided; the API falls back to DEFAULT/ FORCE when possible.
FORCE_DEVICE_ALIAS=
FORCE_DEVICE_IP=
BLOCKED_DEVICE_IPS=
BLOCKED_DEVICE_ALIASES=

# Connection preferences
# Set FORCE_TELNET=1 to only use telnet (no SSH). Set PREFER_TELNET=1 to try telnet first then SSH.
# Set DISABLE_TELNET=1 to enforce SSH-only (no telnet attempts under any circumstance).
FORCE_TELNET=0
PREFER_TELNET=0
DISABLE_TELNET=1

# Legacy SSH fallback (Paramiko Transport). Enable if devices only support old algorithms.
ENABLE_LEGACY_SSH=1
SSH_LEGACY_KEX=diffie-hellman-group1-sha1
SSH_LEGACY_KEY_TYPES=ssh-rsa
SSH_LEGACY_CIPHERS=aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
SSH_LEGACY_MACS=hmac-sha1,hmac-sha1-96,hmac-md5,hmac-md5-96

# NLP model options
USE_MODEL_MAPPING=1
SIMULATE_NETWORK=0
CLI_MODEL_DEVICE=cpu
CLI_MODEL_MAX_LEN=64
CLI_MODEL_PATH=
CLI_ADAPTER_PATH=
CLI_BASE_MODEL_PATH=

# Devices & routing behavior
# - The backend can infer devices from queries using location keywords (e.g., 'london', 'uk', 'vijayawada', 'building 1').
# - If a location is detected, it switches to the matching device and persists it in the conversation.
# - If no hints are present, it reuses the conversation's last device, else falls back to DEFAULT_DEVICE_ALIAS.
# - You can also supply alias-specific passwords via environment variables:
#   DEVICE_UKLONB1SW2_PASSWORD=your-password
#   DEVICE_INVIJB1SW1_PASSWORD=your-password

# Alias-specific passwords (example)
# DEVICE_INVIJB1SW1_PASSWORD=cisco
# DEVICE_UKLONB1SW2_PASSWORD=Preetham

# Response modes (for /network-command/)
# - Default: minimal JSON {"output": "..."}
# - Structured: add structured=1 (or full=1) to get session_id, device, cli_command, raw_output
# - Plain text: add text=1 to get raw output as text/plain body

# Devices cache
# - When set, the devices.json is reloaded on each request (useful during development)
DEVICES_RELOAD_EACH_REQUEST=0

# ==========================================================================================
# EMAIL CONFIGURATION (for Health Monitoring Alerts)
# ==========================================================================================

# Email Backend
# - console: Print emails to console (development)
# - smtp: Send real emails via SMTP (production)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# SMTP Server Configuration (for production)
# Gmail Example (requires App Password, not regular password):
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=1
EMAIL_USE_SSL=0
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password-here
EMAIL_TIMEOUT=10

# Alternative SMTP Servers:
# - Office 365: smtp.office365.com:587
# - Outlook: smtp-mail.outlook.com:587
# - Yahoo: smtp.mail.yahoo.com:587
# - SendGrid: smtp.sendgrid.net:587
# - AWS SES: email-smtp.us-east-1.amazonaws.com:587

# From Email Address
DEFAULT_FROM_EMAIL=netops-alerts@example.com
SERVER_EMAIL=netops-alerts@example.com

# Alert Recipients (comma-separated)
# These emails will receive CPU alerts, loop detection alerts, etc.
ALERT_EMAIL_RECIPIENTS=admin1@example.com,admin2@example.com,ops-team@example.com

# Alert Email Sender (used in monitor_health.py)
ALERT_EMAIL_FROM=netops-alerts@example.com
